plugins {
    id "idea"
    id "java"
    id "application"
}

ext {
    slf4jVersion = "2.0.16"
    logbackVersion = "1.5.9"
    lombokVersion = "1.18.34"
    jetbrainsAnnotationsVersion = "26.0.0"
}

idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation "org.slf4j:slf4j-api:$slf4jVersion"
    implementation "ch.qos.logback:logback-classic:$logbackVersion"

    compileOnly "org.projectlombok:lombok:$lombokVersion"
    annotationProcessor "org.projectlombok:lombok:$lombokVersion"
    implementation "org.jetbrains:annotations:$jetbrainsAnnotationsVersion"
}

project.configurations.implementation.setCanBeResolved(true)

tasks.register("runEqualsAndHashCodeExample", JavaExec) {
    mainClass = "ru.romanow.memory.leaks.EqualsAndHashCodeExample"
    classpath = sourceSets.main.runtimeClasspath
    jvmArgs = ["-Xms16m", "-Xmx16m",
               "-Dcom.sun.management.jmxremote",
               "-Dcom.sun.management.jmxremote.port=9091",
               "-Dcom.sun.management.jmxremote.authenticate=false",
               "-Dcom.sun.management.jmxremote.ssl=false "]
}

jar {
    archiveFileName = "${project.name}.jar"
    manifest {
        attributes(
                "Implementation-Title": project.name,
                "Implementation-Version": version,
                "Class-Path": configurations.implementation.collect { it.absolutePath }.join(" "),
                "Main-Class": "ru.romanow.memory.leaks.EqualsAndHashCodeExample"
        )
    }
}
